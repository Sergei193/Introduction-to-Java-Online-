package by.epam.introjava.basicsofsoftware;

import java.util.Scanner;

public class LinearPrograms {
    //// 1. –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: z = ( (a ‚Äì 3 ) * b / 2) + c.
//         Scanner scanner = new Scanner(System.in);
    ////2. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ
// (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è): ùëè+‚àöùëè2+4ùëéùëê2ùëé‚àíùëé3ùëê+ùëè‚àí2
    //          3. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è):
//          ùë†ùëñùëõ ùë• + ùëêùëúùë† ùë¶
//          ùëêùëúùë† ùë• ‚àí ùë†ùëñùëõ ùë¶‚àó ùë°ùëî ùë•ùë¶
//          4. –î–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ R –≤–∏–¥–∞ nnn.ddd (—Ç—Ä–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–∞–∑—Ä—è–¥–∞ –≤ –¥—Ä–æ–±–Ω–æ–π –∏ —Ü–µ–ª–æ–π —á–∞—Å—Ç—è—Ö). –ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏
//          –¥—Ä–æ–±–Ω—É—é –∏ —Ü–µ–ª—É—é —á–∞—Å—Ç–∏ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª
//          5. –î–∞–Ω–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¢, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö. –í—ã–≤–µ—Å—Ç–∏
//          –¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏ —Å–µ–∫—É–Ω–¥–∞—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–µ:
//          –ù–ù—á –ú–ú–º–∏–Ω SSc
//          6. –î–ª—è –¥–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏–Ω–µ–π–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (—Ö, —É)
//          –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∑–∞–∫—Ä–∞—à–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –∏ false ‚Äî –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª
    private double aLinerProgram = 0;
    private double bLinerProgram = 0;
    private double cLinerProgram = 0;
    private double zLinerProgram = 0;
    private int xLinerProgram = 0;
    private int yLinerProgram = 0;
    private int chooseLinerProgram;
    Scanner lpScaner = new Scanner(System.in);
    public LinearPrograms(){

    }
    public void linearPrograms(){
        System.out.println("Which of tasks do you want to solve?");
        System.out.println("1. –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: z = ( (a ‚Äì 3 ) * b / 2) + c.");
        System.out.println("2. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è): " +
                "" + "\uD835\uDC4F+‚àö\uD835\uDC4F2+4\uD835\uDC4E\uD835\uDC502\uD835\uDC4E‚àí\uD835\uDC4E3\uD835\uDC50+\uD835\uDC4F‚àí2 ");
        System.out.println("3. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è):" +
                "\uD835\uDC60\uD835\uDC56\uD835\uDC5B \uD835\uDC65 + \uD835\uDC50\uD835\uDC5C\uD835\uDC60 \uD835\uDC66/ \uD835\uDC50\uD835\uDC5C\uD835\uDC60 \uD835\uDC65 ‚àí \uD835\uDC60\uD835\uDC56\uD835\uDC5B \uD835\uDC66‚àó \uD835\uDC61\uD835\uDC54 \uD835\uDC65\uD835\uDC66");
        System.out.println("4. –î–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ R –≤–∏–¥–∞ nnn.ddd (—Ç—Ä–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–∞–∑—Ä—è–¥–∞ –≤ –¥—Ä–æ–±–Ω–æ–π –∏ —Ü–µ–ª–æ–π —á–∞—Å—Ç—è—Ö). –ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏" +
                "–¥—Ä–æ–±–Ω—É—é –∏ —Ü–µ–ª—É—é —á–∞—Å—Ç–∏ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞");
        System.out.println("5. –î–∞–Ω–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¢, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö." +
                "–í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏ —Å–µ–∫—É–Ω–¥–∞—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–µ:  –ù–ù—á –ú–ú–º–∏–Ω SSc");
        System.out.println("6. –î–ª—è –¥–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏–Ω–µ–π–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (—Ö, —É)" +
                "–ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∑–∞–∫—Ä–∞—à–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –∏ false ‚Äî –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ");
        try {
            chooseLinerProgram = lpScaner.nextInt();
            switch (chooseLinerProgram){
                case 1:
                         task_1();
                    break;
                case  2:
task_2();
                    break;
                case 3:
task_3();
                    break;
                case 4:
task_4();
                    break;
                case 5:
task_5();
                    break;
                case 6:
task_6();
                    break;
                case 0 :
                    System.out.println("For enter to press 0");
                if(lpScaner.nextInt() == 0)
                {
                    return;
                }
                break;
            }
        }
        catch (Exception e){
            System.out.println("Check your data!!!");
        }
    }
    public LinearPrograms(double aLinerProgram, double bLinerProgram, double cLinerProgram) {
        this.aLinerProgram = aLinerProgram;
        this.bLinerProgram = bLinerProgram;
        this.cLinerProgram = cLinerProgram;
    }

    public double getaLinerProgram() {
        return aLinerProgram;
    }

    public double getbLinerProgram() {
        return bLinerProgram;
    }

    public double getcLinerProgram() {
        return cLinerProgram;
    }

    public double getzLinerProgram() {
        return zLinerProgram;
    }

    public int getxLinerProgram() {
        return xLinerProgram;
    }

    public int getyLinerProgram() {
        return yLinerProgram;
    }

    public void setaLinerProgram(double aLinerProgram) {
        this.aLinerProgram = aLinerProgram;
    }

    public void setbLinerProgram(double bLinerProgram) {
        this.bLinerProgram = bLinerProgram;
    }

    public void setcLinerProgram(double cLinerProgram) {
        this.cLinerProgram = cLinerProgram;
    }

    public void setzLinerProgram(double zLinerProgram) {
        this.zLinerProgram = zLinerProgram;
    }

    public void setxLinerProgram(int xLinerProgram) {
        this.xLinerProgram = xLinerProgram;
    }

    public void setyLinerProgram(int yLinerProgram) {
        this.yLinerProgram = yLinerProgram;
    }

protected void task_1() {
          try {
              System.out.println("Enter value of a =");
              setaLinerProgram(lpScaner.nextInt());
              System.out.println("Enter value of b =");
              setbLinerProgram(lpScaner.nextInt());
              System.out.println("Enter value of c =");
              setcLinerProgram(lpScaner.nextInt());
setzLinerProgram(((getaLinerProgram()-3)*getbLinerProgram()/2)+getcLinerProgram());
System.out.println("Z = " + getzLinerProgram());
          }
          catch (Exception e){
              System.err.println("Check your  data task 1");
          }


}
protected void task_2(){
        try {
            System.out.println("Enter value of a =");
            setaLinerProgram(lpScaner.nextInt());
            System.out.println("Enter value of b =");
            setbLinerProgram(lpScaner.nextInt());
            System.out.println("Enter value of c =");
            setcLinerProgram(lpScaner.nextInt());
            setzLinerProgram((getbLinerProgram() + Math.sqrt(Math.pow(getbLinerProgram(),2)) + 4 * getaLinerProgram() * getcLinerProgram())/2 * getaLinerProgram() - Math.pow(getaLinerProgram(),3)*3 + Math.pow(getbLinerProgram(),-2));
       System.out.println("Z = " + getzLinerProgram());
        }
        catch (Exception e)
        {
            System.out.println("Check your data task 2");
        }
}
protected void task_3 (){
   try {

   }
   catch (Exception e){
       System.out.println("Check your data task_3");
   }

    System.out.println("Enter value of x =");
    setxLinerProgram(lpScaner.nextInt());
    System.out.println("Enter value of y =");
    setyLinerProgram(lpScaner.nextInt());
    setzLinerProgram(((Math.sin(getxLinerProgram()) - Math.cos(getyLinerProgram()))/(Math.cos(getxLinerProgram()) - Math.sin(getyLinerProgram())))
            * Math.tan(getxLinerProgram()*getyLinerProgram()));
    System.out.println("Z = " + getzLinerProgram());
}
protected void task_4(){
        try {
            System.out.println("Value of a = 123.456");
            System.out.println("Value of R = 0");
            setaLinerProgram(123.456);
            System.out.println("Exchange data");
            setbLinerProgram( ((int)getaLinerProgram()/1000.0 + (getaLinerProgram()-(int) getaLinerProgram()) * 1000 ));
            System.out.println("R = " + getbLinerProgram());
        } catch (Exception e)
        {
            System.out.println("Check your data task_4");
        }
}
//         System.out.println(" –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö - >");
//         System.out.print("Time = ");
//         t = scanner.nextDouble();
//         System.out.print("–ß–ß - >"+ (int)t/3600 + " MM - >" + (int)(t%60)/60 + " SS - >" + (int)((t/60)/60)%60);
    protected void task_5(){
        try {
            System.out.println("Enter the Time in seconds - > ");
            setaLinerProgram(lpScaner.nextLong());
            System.out.println("–ù–ù = " + (int)getaLinerProgram()/3600+ " MM = " + ((int)getaLinerProgram()%60)/60 + " SS = " + ((int)(getaLinerProgram()/60/60)%60));
        }
        catch (Exception e)
        {
            System.out.println("Check your data task_5");
        }

    }
    protected void task_6 (){

try {
    System.out.println("Enter value of x =");
    setxLinerProgram(lpScaner.nextInt());
    System.out.println("Enter value of y =");
    setyLinerProgram(lpScaner.nextInt());
    if(-4 < getxLinerProgram() && getxLinerProgram() < 4 && -3 < getyLinerProgram() && getyLinerProgram() < 0 )
    {
System.out.println("X & Y are TRUE");
    }
    else if (-2 < getxLinerProgram() && getxLinerProgram() < 2 && 0 < getyLinerProgram() && getyLinerProgram() < 4)
    {
        System.out.println("X & Y are TRUE");
    }
    else {
        System.out.println("X & Y are FALSE");
    }

}
catch (Exception e)
{
    System.err.println("Check your data task_6");
}
    }

}
