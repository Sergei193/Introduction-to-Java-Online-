public class Main {

    public static void main(String[] args) {
//        1. Дан массив названий переменных в camelCase. Преобразовать названия в snake_case.
//        Task_1 task_1 = new Task_1();
        //    2.Заменить в строке все вхождения word на letter
//        Task_2 task_2 = new Task_2();
//        3.В строке найти количество цифр
//        Task_3 task_3 = new Task_3();
//        4. В строке найти количество чисел
//        Task_4 task_4 = new Task_4();
//5.    Удалить в строке все лишние пробелы, то есть серии подряд идущих пробелов заменить на одиночные пробелы.
//       Крайние пробелы в строке удалить.
//        Task_5 task_5 = new Task_5();
//        Работа со строкой как с объектом типа String или StringBuilder
//        6 (1) Дан текст. Найти наибольшее количество идущих продряд пробелов в нём.
//        Task_6 task_6 = new Task_6();
//        7 (2). В строке вставить после каждого символа 'a' символ 'b'.
//        Task_7 task_7 = new Task_7();
//        8 (3) . Проверить является ли заданное слово палиндромом
//        Task_8 task_8 = new Task_8();
//    9 (4). С помощью функции копирования и операции конкатенации составить из частей слова “информатика” слово “тор
//        Task_9 task_9 = new Task_9();
//        10 (5).Подсчитать, сколько раз среди символов заданной строки встречается буква “а”.
//        Task_10 task_10 = new Task_10();
//      11.(6) Из заданной строки получить новую, повторив каждый символ дважды.
//        Task_11 task_11 = new Task_11();
//       12 (7) Вводится строка. Требуется удалить из нее повторяющиеся символы и все пробелы.
//                Например, если было введено "abc cde def", то должно быть выведено "abcdef".
//        Task_12 task_12 = new Task_12();
//        13 (8). Вводится строка слов, разделенных пробелами. Найти самое длинное слово и вывести
//        его на экран. Случай, когда самых длинных слов может быть несколько, не обрабатывать.
//        Task_13 task_13 = new Task_13();
//        14 (9). Посчитать количество строчных (маленьких) и прописных (больших) букв в введенной строке
//        Task_14 task_14 = new Task_14();
//            15 (10) Строка х состоит из нескольких предложений, каждое из которых кончается точкой,
//    восклицательным или вопросительным знаком. Определить количество предложений в строке X.
//        Task_15 task_15 = new Task_15();
        //        16 (1). Создать приложение, разбивающее текст (текст хранится в строке) и позволяющее выполнять
//    с текстом три различные операции:
//    отсортировать обзацы по количеству предложений;
//    в каждом предложении отсортировать слова по длине;
//    отсортировать лексемы в предложении по убыванию количества вхождений заданного символа,
//    а в случае равенства - по алфавиту.
//        Task_16 task_16 = new Task_16();
//        17 (2)  Напишите анализатор, позволяющий последовательно возвращать содержимое узлов
//        xml-документа и его тип (открывающий тег, закрывающий тег, содержимое тега,
//                тег без тела). Пользоваться готовыми парсерами XML для решения данной задачи нельзя.
        Task_17 task_17 = new Task_17();
    }
}
